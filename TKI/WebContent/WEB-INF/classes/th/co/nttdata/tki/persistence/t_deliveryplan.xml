<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="t_deliveryplan">

	<resultMap id="select-datelist-result" class="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		<result property="detailPlanId" column="detailPlanId"/>
		<result property="deliveryPlanId" column="deliveryPlanId"/>
		<result property="fgId" column="fgId"/>
		<result property="deliveryDate" column="deliveryDate"/>
		<result property="forCastQty" column="forCastQty"/>
		<result property="custReqQty" column="custReqQty"/>
		<result property="tkiCommitQty" column="tkiCommitQty"/>
		<result property="productionQty" column="productionQty"/>
		<result property="deliveryQtyNormal" column="deliveryQtyNormal"/>
		<result property="deliveryQtyBack" column="deliveryQtyBack"/>
		<result property="deliveryQtyTotal" column="deliveryQtyTotal"/>
		<result property="balanceDeliveryQty" column="balanceDeliveryQty"/>
		<result property="balanceOrderQty" column="balanceOrderQty"/>
		<result property="reason" column="reason"/>
		<result property="fgOut" column="fgOut"/>
		<result property="timeList" column="{deliveryPlanId=deliveryPlanId,detailPlanId=detailPlanId,fgId=fgId}" select="t_deliveryplan.selectTimeList"/>
	</resultMap>

	<resultMap id="select-timelist-result" class="th.co.nttdata.tki.bean.TDeliveryPlanTime">
		<result property="detailPlanId" column="detailPlanId"/>
		<result property="timeHr" column="timeHr"/>
		<result property="timeMin" column="timeMin"/>
		<result property="customerLine" column="customerLine"/>
		<result property="deliveryQty" column="deliveryQty"/>
	</resultMap>
	
	<resultMap id="select-DLVR01-result" class="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		<result property="fgId" column="fgId"/>
		<result property="deliveryDate" column="deliveryDate"/>
		<result property="forCastQty" column="forCastQty"/>
		<result property="custReqQty" column="custReqQty"/>
		<result property="tkiCommitQty" column="tkiCommitQty"/>
		<result property="productionQty" column="productionQty"/>
		<result property="deliveryQtyNormal" column="deliveryQtyNormal"/>
		<result property="deliveryQtyBack" column="deliveryQtyBack"/>
		<result property="deliveryQtyTotal" column="deliveryQtyTotal"/>
		<result property="balanceDeliveryQty" column="balanceDeliveryQty"/>
		<result property="balanceOrderQty" column="balanceOrderQty"/>
		<result property="reason" column="reason"/>
		<result property="fgName" column="fgName"/>
		<result property="fgNo" column="fgNo"/>
		<result property="fgOut" column="fgOut"/>
		<!-- <result property="lastUpdate" column="lastUpdate"/>
		<result property="updateBy" column="updateBy"/> -->
	</resultMap>

	<select id="selectDateList" resultMap="select-datelist-result" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		SELECT   <!--select max incase no data, for get at laeast 1 record-->
			(detailPlanId) as detailPlanId	 
			,(deliveryPlanId) as deliveryPlanId
			,(fgId) as fgId
			,(deliveryDate) as deliveryDate
			,(forCastQty) as forCastQty
			,(custReqQty) as custReqQty
			,(tkiCommitQty) as tkiCommitQty
			,(productionQty) as productionQty
			,(deliveryQtyNormal) as deliveryQtyNormal
			,(deliveryQtyBack) as deliveryQtyBack
			,(deliveryQtyTotal) as deliveryQtyTotal
			,(balanceDeliveryQty) as balanceDeliveryQty
			,(balanceOrderQty) as balanceOrderQty
			,(reason) as reason
			,(ISNULL(fgout,0)) as fgout
			,(ISNULL(fgName,'')) as fgName
			,(ISNULL(fgNo,'')) as fgNo
		FROM 
			(
				SELECT  <!--select last date join with date 0 of this month-->
				 d.detailPlanId
				,d.deliveryPlanId
				,#fgId#  AS fgId
				,d.deliveryDate
				,d.forCastQty
				,d.custReqQty
				,d.tkiCommitQty
				,d.productionQty
				,d.deliveryQtyNormal
				,d.deliveryQtyBack
				,d.deliveryQtyTotal
				,d.balanceDeliveryQty
				,ISNULL(o.balanceorderqty, d.balanceOrderQty) AS balanceOrderQty
				,d.reason
				,NULL AS fgout
				,NULL AS fgName
				,NULL AS fgNo
			FROM t_deliveryplan_date d
				LEFT JOIN t_deliveryplan_date_0 o ON o.deliveryPlanId = #deliveryPlanId# AND o.fgid = #fgId# 
				LEFT JOIN
					(<!-- select calendar (lastday of month -1) -->
					SELECT pd.fgid, max(pd.deliverydate) as calendarDate
					FROM   t_deliveryplan_date pd
					INNER JOIN t_deliveryplan p on pd.deliveryplanid = p.deliveryplanid
					WHERE  p.customerid = #customerId#  and p.yearmonth = CONVERT(varchar(6),DATEADD(dd,-1,CAST((CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) +'01') AS DATE)),112)
					GROUP BY pd.fgid
					) c
					ON c.fgid = d.fgid
			WHERE d.fgid = #fgId#  
				AND d.deliveryplanid = (
					SELECT TOP 1 p.deliveryplanid
					FROM t_deliveryplan p 
					WHERE customerId = #customerId#  
					AND yearmonth  <![CDATA[ < ]]>   CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)		
					ORDER BY yearmonth DESC, revision DESC
				) 
				AND d.deliverydate = c.calendarDate
				AND NOT EXISTS (
					SELECT TOP 1  1
          				FROM t_deliveryplan_date_0 o
						WHERE o.deliveryPlanId = #deliveryPlanId# AND o.fgid = #fgId# 
				)
				
			UNION ALL  <!--case no plainid in lastmonth need to union from date0-->
			
			SELECT TOP 1 d.detailPlanId,
               o.deliveryPlanId,
               o.fgId,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               o.balanceorderqty,
               NULL,
               NULL,
               NULL,
               NULL
          	FROM t_deliveryplan_date d left join t_deliveryplan_date_0 o
          		ON d.deliveryplanid = o.deliveryplanid and d.fgid = o.fgid
			WHERE o.deliveryPlanId = #deliveryPlanId# AND o.fgid = #fgId# 
			
			UNION ALL
			
			SELECT 
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               0,
               NULL,
               NULL,
               NULL,
               NULL
			WHERE NOT EXISTS (
				SELECT  1
				FROM t_deliveryplan_date d
					LEFT JOIN t_deliveryplan_date_0 o ON o.deliveryPlanId = #deliveryPlanId# AND o.fgid = #fgId# 
					LEFT JOIN
						(
							SELECT pd.fgid, max(pd.deliverydate) as calendarDate
							FROM   t_deliveryplan_date pd
							INNER JOIN t_deliveryplan p on pd.deliveryplanid = p.deliveryplanid
							WHERE  p.customerid = #customerId#  and p.yearmonth = CONVERT(varchar(6),DATEADD(dd,-1,CAST((CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) +'01') AS DATE)),112)
							GROUP BY pd.fgid
						) c
						ON c.fgid = d.fgid
				WHERE d.fgid = #fgId#  
					AND d.deliveryplanid = (
						SELECT TOP 1 p.deliveryplanid
						FROM t_deliveryplan p 
						WHERE customerId = #customerId#  
						AND yearmonth  <![CDATA[ < ]]>  CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)		
						ORDER BY yearmonth DESC, revision DESC
					) 
					AND d.deliverydate = c.calendarDate
					AND NOT EXISTS (
						SELECT TOP 1  1
          					FROM t_deliveryplan_date_0 o
							WHERE o.deliveryPlanId = #deliveryPlanId# AND o.fgid = #fgId# 
					)
					
				UNION ALL  
				
				SELECT 1
          		FROM t_deliveryplan_date d left join t_deliveryplan_date_0 o
          			ON d.deliveryplanid = o.deliveryplanid and d.fgid = o.fgid
				WHERE o.deliveryPlanId = #deliveryPlanId# AND o.fgid = #fgId# 
			)
		) AS detail
		
		UNION ALL

		SELECT
			 d.detailPlanId
			,d.deliveryPlanId
			,#fgId#  AS fgId
			,c.calendardate
			,d.forCastQty
			,d.custReqQty
			,d.tkiCommitQty
			,d.productionQty
			,d.deliveryQtyNormal
			,d.deliveryQtyBack
			,d.deliveryQtyTotal
			,d.balanceDeliveryQty
			,d.balanceOrderQty
			,d.reason
			,s.fgout
			,f.fgName
			,f.fgNo
		FROM m_calendar c
			LEFT JOIN t_deliveryplan_date d ON d.deliveryPlanId = #deliveryPlanId# AND d.deliveryDate = c.calendarDate AND d.fgId = #fgId# 
			LEFT JOIN t_fg_stock s ON s.fgid = #fgId#  AND s.reportdate = c.calendarDate AND s.customerId = #customerId# 
			LEFT JOIN m_fg f ON f.fgid = d.fgid
		WHERE
			    c.calendarDate  <![CDATA[ >= ]]>  CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) +'01'
			AND c.calendarDate  <![CDATA[ <= ]]>  DATEADD(dd,-1,DATEADD(month, 1, CAST((CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) +'01') AS DATE)))
		ORDER BY deliveryDate
	</select>
	
	<select id="selectInsertFlag" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="java.lang.String">
		SELECT 
			CASE
				WHEN p.revision = maxRev.maxRevision THEN 'Y'
				ELSE 'N'
			END AS InsertFlag
		FROM t_deliveryplan p 
		LEFT JOIN (
			SELECT MAX(customerId) as customerId, MAX(yearmonth) as yearmonth, MAX(revision) as maxRevision 
			FROM t_deliveryplan
			WHERE customerId = #customerId# 
			AND yearmonth = CAST(#year# AS VARCHAR)+ RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
		) maxRev ON p.customerId = maxRev.customerId AND p.yearmonth = maxRev.yearmonth
		WHERE p.deliveryPlanId = #deliveryPlanId#
	</select>
	
	<select id="selectPlanList" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		SELECT 
				 t.customerId
				,m.customerName
				,t.deliveryPlanid
				,t.revision
				,t.yearmonth
				,t.lastUpdate
				,t.updateby
		FROM t_deliveryplan t
		INNER JOIN m_customer m ON m.customerId = t.customerId
		WHERE 	t.customerId = #customerId#
				AND t.yearmonth = CAST(#year# AS VARCHAR) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
		ORDER BY t.revision DESC
	</select>

	<select id="selectTimeList" resultMap="select-timelist-result">
		SELECT DISTINCT t.timeHr, t.timeMin, t.customerlineid as customerline, #detailPlanId# AS detailPlanId, pt.deliveryQty
		FROM t_deliveryplan p, t_deliveryplan_date d, t_deliveryplan_time t         
		LEFT JOIN t_deliveryplan_time pt ON pt.detailPlanId = #detailPlanId# AND pt.timeHr = t.timeHr AND pt.timeMin = t.timeMin
		WHERE
				p.deliveryPlanId = #deliveryPlanId#
			AND d.fgId           = #fgId#
			AND p.deliveryPlanId = d.deliveryPlanId
			AND d.detailPlanId   = t.detailPlanId
	</select>

	<statement id="insertPlan" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="integer">
		MERGE INTO t_deliveryplan p
			USING ( SELECT <isNotEmpty property="deliveryPlanId">#deliveryPlanId#</isNotEmpty><isEmpty property="deliveryPlanId">null</isEmpty> AS deliveryPlanId ) t
			ON (p.deliveryPlanId = t.deliveryPlanId)
			WHEN MATCHED THEN
				UPDATE SET
					 createBy   = #createBy#
					,customerId = #customerId#
					,yearmonth  = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
					,updateBy   = #updateBy#
					,lastUpdate   = GETDATE()
				
			WHEN NOT MATCHED THEN
				INSERT (createby,customerid,revision,yearmonth,updateby,lastUpdate)
				VALUES (
					 #createBy#
					,#customerId#
					,0
					,CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
					,#updateBy#
					,GETDATE()
				)
				OUTPUT INSERTED.deliveryPlanId;
	</statement>

	<statement id="insertDate" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlanDate" resultClass="integer">
			MERGE INTO t_deliveryplan_date p
			USING ( SELECT #deliveryPlanId# AS deliveryPlanId, #detailPlanId# AS detailPlanId, #deliveryDate# AS deliveryDate, #fgId# AS fgId ) t
			ON (p.deliveryPlanId = t.deliveryPlanId AND p.deliveryDate = t.deliveryDate AND p.fgId = t.fgId)
			WHEN MATCHED THEN
				UPDATE SET
				 balancedeliveryqty = #balanceDeliveryQty#
				,balanceorderqty    = #balanceOrderQty#
				,custreqqty         = #custReqQty#
				,deliverydate       = #deliveryDate#
				,deliveryqtyback    = #deliveryQtyBack#
				,deliveryqtynormal  = #deliveryQtyNormal#
				,deliveryqtytotal   = #deliveryQtyTotal#
				,forcastqty         = #forCastQty#
				,productionqty      = #productionQty#
				,reason             = #reason#
				,tkicommitqty       = #tkiCommitQty#
				
			WHEN NOT MATCHED THEN
				INSERT (balancedeliveryqty,balanceorderqty,custreqqty,deliverydate,deliveryqtyback,deliveryqtynormal,deliveryqtytotal,deliveryplanid,fgid,forcastqty,productionqty,reason,tkicommitqty)
				VALUES (
					 #balanceDeliveryQty#
					,#balanceOrderQty#
					,#custReqQty#
					,#deliveryDate#
					,#deliveryQtyBack#
					,#deliveryQtyNormal#
					,#deliveryQtyTotal#
					,#deliveryPlanId#
					,#fgId#
					,#forCastQty#
					,#productionQty#
					,#reason#
					,#tkiCommitQty#
				)
				OUTPUT INSERTED.detailPlanId;
	</statement>

	<statement id="insertTime" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		DELETE FROM t_deliveryplan_time WHERE detailPlanId = #detailPlanId# 
		<iterate property="timeList">
			INSERT INTO t_deliveryplan_time (detailplanid,deliveryqty,timehr,timemin,customerlineid)
			VALUES (
				 #detailPlanId#
				,#timeList[].deliveryQty#
				,#timeList[].timeHr#
				,#timeList[].timeMin#
				,#timeList[].customerLine#
			)
		</iterate>
	</statement>
	
	<insert id="copyDate" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		INSERT INTO t_deliveryplan_date
			(deliveryplanid,fgid,deliverydate,forcastqty,custreqqty,tkicommitqty,productionqty
			,deliveryQtyNormal,deliveryQtyBack,deliveryQtyTotal,balanceDeliveryQty,balanceOrderQty,reason)
		SELECT
			 #newDeliveryPlanId#
			,fgId
			,deliveryDate
			,forCastQty
			,custReqQty
			,tkiCommitQty
			,productionQty
			,deliveryQtyNormal
			,deliveryQtyBack
			,deliveryQtyTotal
			,balanceDeliveryQty
			,balanceOrderQty
			,reason
		FROM t_deliveryplan_date
		WHERE deliveryPlanId = #deliveryPlanId#;
	</insert>
	
	<insert id="copyPlan" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		INSERT INTO t_deliveryplan
			(yearmonth,customerid,revision,createdate,createby,lastupdate,updateby)
		SELECT 
			 DISTINCT p1.yearmonth
			,p1.customerid
			,(MAX(p2.revision) OVER (PARTITION BY p2.customerId))+1 AS revision
			,GETDATE() AS createdate
			,#createBy# AS createby
			,GETDATE() AS lastupdate
			,#updateBy# AS updateby
		FROM t_deliveryplan p1
		LEFT JOIN t_deliveryplan p2 ON p2.customerId = #customerId# AND p2.yearmonth = CAST(#year# AS VARCHAR)+ RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
		WHERE p1.deliveryplanid = #deliveryPlanId# AND p1.revision = #revision#;
		<selectKey resultClass="int">
			SELECT @@IDENTITY AS deliveryPlanId
		</selectKey>
	</insert>
	
	<insert id="copyTime" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		INSERT INTO t_deliveryplan_time
			(detailPlanId, timeHr, timeMin, deliveryQty, customerlineid)
		SELECT d2.detailPlanId, t.timeHr, t.timeMin, t.deliveryQty, t.customerlineid
		FROM
			t_deliveryplan_date d1
			LEFT JOIN t_deliveryplan_date d2 ON d2.deliveryPlanId = #newDeliveryPlanId# AND d2.deliveryDate = d1.deliveryDate AND d2.fgId = d1.fgId,
			t_deliveryplan_time t
		WHERE
			    d1.deliveryPlanId = #deliveryPlanId#
			AND d1.detailPlanId = t.detailPlanId
	</insert>
	
	<insert id="copyBalanceOrder" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		INSERT INTO t_deliveryplan_date_0
			(deliveryplanid, fgid ,balanceorderqty)
		SELECT #newDeliveryPlanId#, o.fgid ,o.balanceorderqty
	  	FROM t_deliveryplan_date_0 o
	  	WHERE o.deliveryplanid = #deliveryPlanId#
	</insert>
	
	<select id="selectDLV_R01" resultMap="select-DLVR01-result" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		<!-- select this month -->
		SELECT
				 fg.fgId
				,c.calendarDate as deliveryDate
				,d.forCastQty
				,d.custReqQty
				,d.tkiCommitQty
				,d.productionQty
				,d.deliveryQtyNormal
				,d.deliveryQtyBack
				,d.deliveryQtyTotal
				,d.balanceDeliveryQty
				,d.balanceOrderQty
				,d.reason
				,d.fgout
				,f.fgName
				,f.fgNo

		FROM
			(
			 SELECT DISTINCT p.deliveryPlanId, d.fgId, p.customerId,p.lastupdate,p.updateby
			 FROM t_deliveryplan p
			 INNER JOIN t_deliveryplan_date d ON p.deliveryPlanId = d.deliveryPlanId
			 WHERE  p.customerId = #customerId#  
				AND p.yearmonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
				AND p.revision = #revision#
			) fg
		CROSS JOIN
			(
			 SELECT c.calendarDate
			 FROM   m_calendar c
			 WHERE  CONVERT(VARCHAR(6),c.calendarDate,112) = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
			 ) c
		LEFT JOIN
			(SELECT d.*, s.fgout
			 FROM t_deliveryplan_date d
			 INNER JOIN t_deliveryplan p on d.deliveryPlanId = p.deliveryPlanId
			 LEFT JOIN t_fg_stock s ON 	s.fgId = d.fgId
									AND s.reportDate = d.deliveryDate
									AND s.customerId = p.customerId
			 WHERE 	p.customerId = #customerId#  
				AND p.yearmonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
				AND p.revision = #revision#
			) d	ON fg.deliveryPlanId = d.deliveryPlanId AND fg.fgId = d.fgId AND c.calendarDate = d.deliveryDate
		LEFT JOIN m_fg f ON f.fgId = fg.fgId
	
		UNION ALL	

		SELECT
				 fg.fgId
				,ISNULL(c.calendarDate,DATEADD(dd,-1,CAST((CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) +'01') AS DATE))) as deliveryDate	
				,d.forCastQty
				,d.custReqQty
				,d.tkiCommitQty
				,d.productionQty
				,d.deliveryQtyNormal
				,d.deliveryQtyBack
				,d.deliveryQtyTotal
				,d.balanceDeliveryQty
				,d.balanceOrderQty
				,d.reason
				,d.fgout
				,f.fgName
				,f.fgNo

		FROM 
			(
			 SELECT DISTINCT p.deliveryPlanId, d.fgId, p.customerId,p.lastupdate,p.updateby
			 FROM t_deliveryplan p
			 INNER JOIN t_deliveryplan_date d ON p.deliveryPlanId = d.deliveryPlanId
			 WHERE  p.customerId = #customerId#  
				AND p.yearmonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
				AND p.revision = #revision#
			) fg
			
			 
		LEFT JOIN
			(
			SELECT pd.fgid, max(pd.deliverydate) as calendarDate
			FROM   t_deliveryplan_date pd
			INNER JOIN t_deliveryplan p on pd.deliveryplanid = p.deliveryplanid
			WHERE  p.customerid = #customerId#  and p.yearmonth = CONVERT(varchar(6),DATEADD(dd,-1,CAST((CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) +'01') AS DATE)),112)
			GROUP BY pd.fgid
			) c
			ON fg.fgid = c.fgid 
		LEFT JOIN
		(
			SELECT d.*, NULL as fgout FROM t_deliveryplan_date d				
		)
		 d	ON fg.fgId = d.fgId AND c.calendarDate = d.deliveryDate
		LEFT JOIN m_fg f ON f.fgId = fg.fgId
		WHERE NOT EXISTS (
			SELECT TOP 1 
				   1
          		FROM t_deliveryplan_date_0 o
          		INNER JOIN (
          			 SELECT DISTINCT p.deliveryPlanId, d.fgId, p.customerId,p.lastupdate,p.updateby
					 FROM t_deliveryplan p
					 INNER JOIN t_deliveryplan_date d ON p.deliveryPlanId = d.deliveryPlanId
					 WHERE  p.customerId = #customerId#  
						AND p.yearmonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
						AND p.revision = #revision#
				) tbl on tbl.deliveryplanid = o.deliveryplanid AND tbl.fgid = o.fgid  AND tbl.fgid = f.fgId
		)
		
		UNION ALL  
			
			SELECT 
               o.fgId,
               tbl2.deliverydate,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               NULL,
               o.balanceorderqty,
               NULL,
               NULL,
               fg.fgname,
               fg.fgno
          	FROM t_deliveryplan_date_0 o
          	LEFT JOIN m_fg fg ON fg.fgid = o.fgid
          	
          	INNER JOIN (
          			 SELECT DISTINCT p.deliveryPlanId, d.fgId, p.customerId,p.lastupdate,p.updateby
					 FROM t_deliveryplan p
					 INNER JOIN t_deliveryplan_date d ON p.deliveryPlanId = d.deliveryPlanId
					 WHERE  p.customerId = #customerId#  
						AND p.yearmonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
						AND p.revision = #revision#
				) tbl on tbl.deliveryplanid = o.deliveryplanid AND tbl.fgid = o.fgid
			INNER JOIN (					
          			 SELECT d.fgId, p.customerId, MAX(d.deliverydate) AS deliveryDate
					 FROM t_deliveryplan p
					 INNER JOIN t_deliveryplan_date d ON p.deliveryPlanId = d.deliveryPlanId
					 WHERE  p.customerId = #customerId#  
						AND p.yearmonth  <![CDATA[ < ]]>  CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
						AND p.revision = #revision#
						GROUP BY  d.fgId, p.customerId
			)tbl2 on tbl2.customerid = tbl.customerid AND tbl2.fgid = tbl.fgid
		
		ORDER BY fgId,calendarDate
	</select>
	
	<select id="selectDLV_R02" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		SELECT 
			 c.customerCode
			,d.deliveryDate
			,d.fgId
			,f.fgName
			,f.fgNo
			,p.customerId
			,p.revision
			<!-- ,p.updateBy  -->
			,t.deliveryQty
			,t.timeHr
			,t.timeMin
			,l.customerLineName as customerLine
		FROM t_deliveryplan_date d
		INNER JOIN t_deliveryplan p ON d.deliveryplanId = p.deliveryplanId 
									AND p.revision = 
													(SELECT MAX(revision) 
													 FROM t_deliveryplan 
													 WHERE customerId = p.customerId 
													 AND yearmonth = CONVERT(VARCHAR(6),d.deliveryDate,112))
		INNER JOIN t_deliveryplan_time t ON d.detailPlanId = t.detailPlanId
		INNER JOIN m_customer c ON c.customerId = p.customerId
		INNER JOIN m_fg f ON f.fgId = d.fgId
		INNER JOIN m_user_customer u ON u.customerId = p.customerId
		LEFT JOIN m_customer_line l ON l.customerLineId = t.customerLineId
		WHERE d.deliveryDate = #deliveryDate#
		AND u.userName = #updateBy# AND t.deliveryQty <![CDATA[ <> ]]> 0
		ORDER BY p.customerId,t.timeHr,t.timeMin,d.fgId
	</select>
	
	<resultMap id="select-MRDC_R14-result" class="th.co.nttdata.tki.bean.TDeliveryPlan" groupBy="customerId,partId">
		<result property="partId" column="partId"/>
		<result property="partName" column="partName"/>
		<result property="partNo" column="partNo"/>
		<result property="saleUnitPrice" column="saleUnitPrice"/>
		<result property="customerName" column="customerName"/>
		<result property="dateList" resultMap="t_deliveryplan.resultDetail"/>
	</resultMap>
	
	<resultMap id="resultDetail" class="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		<result property="qtyResidual" column="qtyResidual"/>
		<result property="qty" column="qty"/>
		<result property="price" column="price"/>
		<result property="deliveryDate" column="deliveryDate"/>
	</resultMap>
	
	<select id="selectMRDC_R14" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultMap="select-MRDC_R14-result">
		SELECT TOP $maxRecord$  
			 yearmonth
			,revision
			,deliverydate AS deliveryDate
			,customerid AS customerId
			,sCustomerDeptCode AS customerName
			,sPartId AS partId
			,sPartName AS partName
			,sPartNo AS partNo
			,nSaleUnitPrice AS saleUnitPrice
			,nPeriodPerDateOfOrderReceiptResidual AS qtyResidual
			,nQty AS qty
			,nPrice AS price
		FROM V_15_ResidualSalesOrderTransitionList
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> customerid = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partName"> sPartName LIKE #partName# +'%' </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partNo"> sPartNo LIKE #partNo# +'%' </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="yearFr"> yearmonth <![CDATA[ >= ]]> CAST(#yearFr# AS VARCHAR(4)) + RIGHT('0'+ CAST(#monthFr#+1 AS VARCHAR), 2) </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="yearTo"> yearmonth <![CDATA[ <= ]]> CAST(#yearTo# AS VARCHAR(4)) + RIGHT('0'+ CAST(#monthTo#+1 AS VARCHAR), 2) </isNotEmpty>
	  		</dynamic>
	  	ORDER BY sPartName
	</select>
	
	<select id="countMRDC_R14" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM V_15_ResidualSalesOrderTransitionList
	</select>
	
	<resultMap id="select-MRDC_R11-result" class="th.co.nttdata.tki.bean.TDeliveryPlan" groupBy="customerId,partId">
		<result property="partId" column="partId"/>
		<result property="partName" column="partName"/>
		<result property="unitWeight" column="unitWeight"/>
		<result property="unitPrice" column="unitPrice"/>
		<result property="material" column="material"/>
		<result property="partNo" column="partNo"/>
		<result property="customerName" column="customerName"/>
		<result property="category" column="category"/>
		<result property="currency" column="currency"/>
		<result property="dateList" resultMap="t_deliveryplan.resultDetailMRDC_R11"/>
	</resultMap>
	
	<resultMap id="resultDetailMRDC_R11" class="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		<result property="amount" column="amount"/>
		<result property="qty" column="qty"/>
		<result property="month" column="month"/>
		<result property="year" column="year"/>
	</resultMap>
	
	<select id="selectMRDC_R11" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultMap="select-MRDC_R11-result">
		SELECT TOP $maxRecord$ 
			 partid AS partId
			,nYear AS year
			,nMonth AS month
			,sCustomerDeptCode AS customerCode
			,sPartname AS partName
			,sMaterialCode AS material
			,nWeightPerUnit AS unitWeight
			,nUnitPrice AS unitPrice
			,nQty AS qty
			,nAmount AS amount
			,sCategory AS category
			,sPartNo AS partNo
			,sCustomer AS customerName
			,sCurrency AS currency
		FROM V_12_SalesSummary
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partNo"> sPartNo LIKE #partNo# +'%' </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partName"> sPartname LIKE #partName# +'%' </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="yearFr"> nYearMonth <![CDATA[ >= ]]> CAST(#yearFr# AS VARCHAR(4)) + RIGHT('0'+ CAST(#monthFr#+1 AS VARCHAR), 2) </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="yearTo"> nYearMonth <![CDATA[ <= ]]> CAST(#yearTo# AS VARCHAR(4)) + RIGHT('0'+ CAST(#monthTo#+1 AS VARCHAR), 2) </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="category"> sCategory = #category# </isNotEmpty>
	  		</dynamic>
	  	ORDER BY nYear, nMonth, sCustomerDeptCode, sPartNo
	</select>
	
	<delete id="deleteTimeByFg" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		DELETE
		FROM t_deliveryplan_time
		WHERE detailPlanId IN
		( 
			SELECT detailPlanId
			FROM t_deliveryplan_date
			WHERE deliveryPlanId = #deliveryPlanId# AND fgId = #fgId#
		)
	</delete>
	
	<delete id="deleteDateByFg" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		DELETE
		FROM t_deliveryplan_date
		WHERE deliveryPlanId = #deliveryPlanId# AND fgId = #fgId#
	</delete>
	
	<delete id="deleteTimeByPlan" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		DELETE
		FROM t_deliveryplan_time
		WHERE detailPlanId IN
		( 
			SELECT detailPlanId
			FROM t_deliveryplan_date
			WHERE deliveryPlanId = #deliveryPlanId#
		)
	</delete>
	
	<delete id="deleteDateByPlan" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		DELETE
		FROM t_deliveryplan_date
		WHERE deliveryPlanId = #deliveryPlanId#
	</delete>
	
	<delete id="deletePlanByPlan" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		DELETE 
		FROM t_deliveryplan
		WHERE deliveryPlanId = #deliveryPlanId#
	</delete>
	
	<delete id="deleteBalanceOrderByPlan" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		DELETE 
		FROM t_deliveryplan_date_0
		WHERE deliveryPlanId = #deliveryPlanId#
	</delete>
	
	<select id="countDate" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="Integer">
		SELECT 
			count(deliveryPlanId)
		FROM t_deliveryplan_date
		WHERE deliveryPlanId = #deliveryPlanId# AND fgId = #fgId#
	</select>
	
	<select id="selectMRDC_R18_ProcessList1" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		SELECT TOP $maxRecord$ 
			 nYearMonth AS yearMonth
			,nRevisionNo AS revision
			,sCustomerId AS customerId
			,sCustomerCode AS customerCode 
			,sCustomerName AS customerName
			,sPartNo AS partNo
			,sPartName AS partName
			,sMaterial AS materialName
			,nUnitWeight AS unitWeight
			,nDeliveryQty_Normal AS normalQty
			,nDeliveryQty_Return AS returnQty
			,nOrderQty AS orderQty
			,nForecastQty AS forecastQty
			,nRemainDeliveryQty AS remainQty
		 FROM V_28_ProcessList1_Summary
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partId"> sPartId = #partId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="year"> nYearMonth BETWEEN #yearmonthFr# AND #yearmonthTo# </isNotEmpty>
	  		</dynamic>
	</select>
	
	<resultMap id="resultMRDC_R18_ProcessList2_Order" class="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		<result property="deliveryDate" column="deliveryDate"/>
		<result property="orderQty" column="orderQty"/>
	</resultMap>
	
	<resultMap id="resultMRDC_R18_ProcessList2_Sales" class="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		<result property="deliveryDate" column="deliveryDate"/>
		<result property="salesQty" column="salesQty"/>
	</resultMap>
	
	<select id="selectMRDC_R18_ProcessList2_Order" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultMap="resultMRDC_R18_ProcessList2_Order">
		SELECT TOP $maxRecord$ 
			 sCustomerId AS customerId
			,sPartId AS partId
			,nYearMonth AS yearMonth
			,dDeliveryDate AS deliveryDate
			,nRevisionId AS revision
			,nOrderQty AS orderQty
		FROM V_28_ProcessList2_Order
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partId"> sPartId = #partId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="year"> nYearMonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) </isNotEmpty>
	  		</dynamic>
	</select>
	
	<select id="selectMRDC_R18_ProcessList2_Sales" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultMap="resultMRDC_R18_ProcessList2_Sales">
		SELECT TOP $maxRecord$ 
			 sCustomerId AS customerId
			,sPartId AS partId
			,nYearMonth AS yearMonth
			,dReportDate AS deliveryDate
			,nSalesQty AS salesQty
		FROM V_28_ProcessList2_Sales
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partId"> sPartId = #partId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="year"> nYearMonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) </isNotEmpty>
	  		</dynamic>
	</select>
	
	<select id="queryWipOfPart" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.MWip">
		SELECT pw.wip, w.wipName, pw.wipOrder, pw.isCalc
		FROM m_part_wip pw INNER JOIN m_wip w ON pw.wip = w.wip 
		WHERE pw.partId = #partId# ORDER BY wipOrder
	</select>
	
	<select id="selectMRDC_R18_ProcessList3" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		SELECT TOP $maxRecord$ 
			 dReportDate AS deliveryDate
			,sWIP AS wip
			,sProcess AS wipName
			,nNGQty AS ng
			,nOKQty AS ok
			,nStockInQty AS stockInQty
			,nStockOutQty AS stockOutQty
		FROM V_28_ProcessList3_Process
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partId"> sPartId = #partId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="year"> nYearMonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) </isNotEmpty>
	  		</dynamic>
	</select>
	
	<select id="selectMRDC_R18_ProcessList4" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		SELECT TOP $maxRecord$ 
			 sWIP AS wip
			,nStartStockQty AS startStockQty
			,nEndStockQty AS endStockQty
		FROM V_28_ProcessList4_StockSummary
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partId"> sPartId = #partId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="year"> nYearMonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) </isNotEmpty>
	  		</dynamic>
	</select>
	
	<select id="selectMRDC_R18_ProcessList5" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		SELECT TOP $maxRecord$ 
			 dReportDate AS deliveryDate
			,nDeadlineQty AS deadlineQty
			,sWIP AS wip
		FROM V_28_ProcessList5_DailyPlan
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partId"> sPartId = #partId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="year"> nYearMonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) </isNotEmpty>
	  		</dynamic>
	</select>
	
	<select id="selectMRDC_R01ProductCompositionList1" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		SELECT 
			 sCustomerId AS customerId
			,sCustomerCode AS customerCode
			,sCustomerName AS customerName
			,sPartNo AS partNo
			,sPartName AS partName
			,sCategory AS category
			,sMaterial AS materialName
			,nUnitWeight AS unitWeight
			,nSalesUnitPrice AS saleUnitPrice
			,nDiecastCost AS diecastCost
			,nMaterialCost AS materialCost
			,nProcessingCost AS processingCost
		FROM V_01_ProductCompositionList1_Summary
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partId"> sPartId = #partId# </isNotEmpty>
	  		</dynamic>
	</select>
	
	<select id="selectMRDC_R01ProductCompositionList2" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlan">
	  	SELECT 
			 p2.sCustomerId AS  customerId
			,p2.sPartId AS partId
			,p2.sWIP AS wip
			,p2.sWIPName AS wipName
			,p2.nProcessingCost AS processingCost
			,p2.nCavUsedQty AS cavQty
			,p2.nStockControl AS stockControl
			,p2.nMaterialCost AS materialCost
			,p3.sOutsource AS outSource
		FROM V_01_ProductCompositionList2_Process p2
		LEFT JOIN V_01_ProductCompositionList3_Outsource p3 ON p2.sWIP = p3.sWIP 
		AND p2.sCustomerId =p3.sCustomerId AND p2.sPartId = p3.sPartId
	  	<dynamic prepend="WHERE">
  			<isNotEmpty prepend="AND" property="customerId"> p2.sCustomerId = #customerId# </isNotEmpty>
  			<isNotEmpty prepend="AND" property="partId"> p2.sPartId = #partId# </isNotEmpty>
	  	</dynamic>
	  	ORDER BY p2.nWIPSeq asc, p3.sOutsource DESC
	</select>
	
	<select id="selectMRDC_R04ProductMaster" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		SELECT TOP $maxRecord$ 
			 sCustomerId AS customerId
			,sCustomerCode AS customerCode
			,sCustomerName AS customerName
			,sPartId AS partId
			,sPartNo AS partNo
			,sPartName AS partName
			,sRemark AS remark
			,sCategory AS category
			,sMaterial AS materialName
			,nUnitWeight AS unitWeight
			,nMaterialUnitCost AS materialUnitCost
			,nCycleTime_OK AS cycleTimeOK
			,nSalesUnitPrice AS saleUnitPrice
			,nDiecastCost AS diecastCost
			,nMaterialCost AS materialCost
			,nQtyPerPack AS qty
			,nProductYieldRate AS productRate
			,sMoldName AS moldName
			,sMoldNo AS moldNo
			,sCavNo AS cavNo
			,nNumberTimeMoldChange AS numberTimeMoldChange
			,sMoldUpdatedDate AS moldUpdatedDate
			,nInitialShotQty AS initialShotQty
			,nMaxShotQty AS maxShotQty
			,nProcessingCost AS processingCost
		FROM V_04_ProductMaster
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="category"> sCategory = #category# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partNo"> sPartNo LIKE #partNo# +'%' </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partName"> sPartname LIKE #partName# +'%' </isNotEmpty>
	  		</dynamic>
	  	ORDER BY sCategory , sCustomerCode, sCustomerName, sPartNo
	</select>
	
	<select id="countMRDC_R04ProductMaster" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM V_04_ProductMaster
	</select>
	
	<select id="searchMRDC_S031" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		SELECT 
			 CAST(SUBSTRING(CAST(p1.nYearMonth AS VARCHAR(6)),1,4) AS INT) AS year
			,CAST(SUBSTRING(CAST(p1.nYearMonth AS VARCHAR(6)),5,6) AS INT)-1 AS month
			,p1.sCustomer AS customerCode
			,p1.sPartNo AS partNo
			,p1.sPartName AS partName
			,p1.nTotalQty AS totalQty
			,p1.nOKQty AS ok
			,p1.nNGQty AS ng
			,p1.nCavQty AS cavQty
			,p1.nLotQty AS lotQty
			,p1.sCategory AS category
			,p1.sMaterial AS materialName
			,p1.nUnitweight AS unitWeight
			,p1.SNP AS snp
			,p1.nCustomerId AS customerId
			,p1.nPartId AS partId
			,p2.nForecastQty AS forCastQty
			,p2.nCustReqQty AS custReqQty
			,p2.nTKICommitQty AS tkiCommitQty
			,p2.nProductionQty AS productionQty
			,p2.nDeliveryQty_Normal AS deliveryQtyNormal
			,p2.nDeliveryQty_Back AS deliveryQtyBack
			,p2.nDeliveryQty_Total AS deliveryQtyTotal
		FROM V_03_ProductInformaionInquiry1_Summary p1
		LEFT JOIN V_03_ProductInformaionInquiry2_Plan p2 ON p1.nYearMonth = p2.nYearMonth
		AND p1.nCustomerId = p2.nCustomerId AND p1.nPartId = p2.nPartId
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> p1.nCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="category"> p1.sCategory = #category# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="materialId"> p1.nMaterialId = #materialId# </isNotEmpty>
				<isNotEmpty prepend="AND" property="yearFr"> p1.nYearMonth <![CDATA[ >= ]]> CAST(#yearFr# AS VARCHAR(4)) + RIGHT('0'+ CAST(#monthFr#+1 AS VARCHAR), 2) </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="yearTo"> p1.nYearMonth <![CDATA[ <= ]]> CAST(#yearTo# AS VARCHAR(4)) + RIGHT('0'+ CAST(#monthTo#+1 AS VARCHAR), 2) </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partNo"> p1.sPartNo LIKE #partNo# +'%' </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partName"> p1.sPartname LIKE #partName# +'%' </isNotEmpty>
	  		</dynamic>
	  	ORDER BY p1.nYearMonth,p1.sCustomer,p1.sPartNo
	</select>
	
	<select id="countMRDC_S031" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="int">
		SELECT count(*)
		FROM V_03_ProductInformaionInquiry1_Summary p1
		LEFT JOIN V_03_ProductInformaionInquiry2_Plan p2 ON p1.nYearMonth = p2.nYearMonth
		AND p1.nCustomerId = p2.nCustomerId AND p1.nPartId = p2.nPartId
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> p1.nCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="category"> p1.sCategory = #category# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="materialId"> p1.nMaterialId = #materialId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="yearFr"> p1.nYearMonth <![CDATA[ >= ]]> CAST(#yearFr# AS VARCHAR(4)) + RIGHT('0'+ CAST(#monthFr#+1 AS VARCHAR), 2) </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="yearTo"> p1.nYearMonth <![CDATA[ <= ]]> CAST(#yearTo# AS VARCHAR(4)) + RIGHT('0'+ CAST(#monthTo#+1 AS VARCHAR), 2) </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partNo"> p1.sPartNo LIKE #partNo# +'%' </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partName"> p1.sPartname LIKE #partName# +'%' </isNotEmpty>
	  		</dynamic>
	</select>
	
	<select id="searchMRDC_S032" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		SELECT 
 			 sReasonCode AS reasonCode
			,sReasonName AS reasonName
			,nNGQty AS ng
			,LEN(sReasonCode) as reasondigit
		FROM V_03_ProductInformaionInquiry3_NGReason
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> nCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partId"> nPartId = #partId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="year"> nYearMonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2) </isNotEmpty>
	  		</dynamic>
	  	ORDER BY reasondigit,sReasonCode
	</select>
	
	<select id="selectMRDC_R15" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		SELECT TOP $maxRecord$ 
			 sCustomerId AS customerId
			,sCustomerCode AS customerCode
			,sCustomerName AS customerName
			,sPartId AS partId
			,sPartNo AS partNo
			,sPartName AS partName
			,sCategory AS category
			,sMaterial AS materialName
			,nWIPSeq AS seq
			,sWIP AS wip
			,sWIPName AS wipName
			,nUnitWeight AS unitWeight
			,nMaterialCost AS materialCost
			,nDiecastCost AS diecastCost
			,nProcessingCost AS processingCost
			,nOKQty AS ok
			,nNGQty AS ng
			,nNGRatio AS ngRatio
			,nSellingPrice AS sellingPrice
			,nNGCost AS ngCost
			,nNGYieldRatio AS ngYieldRatio
		FROM V_16_ProductCostList
	  		<dynamic prepend="WHERE">
	  			<isNotEmpty prepend="AND" property="customerId"> sCustomerId = #customerId# </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partNo"> sPartNo LIKE #partNo# +'%' </isNotEmpty>
	  			<isNotEmpty prepend="AND" property="partName"> sPartname LIKE #partName# +'%' </isNotEmpty>
	  		</dynamic>
	  	ORDER BY sCustomerCode, sPartNo, nWIPSeq 
	</select>
	
	<select id="countMRDC_R15" resultClass="Integer">
		SELECT 
			COUNT(*)
		FROM V_16_ProductCostList
	</select>
	
	<resultMap id="resultMRDC_R20" class="th.co.nttdata.tki.bean.TDeliveryPlanDate">
		<result property="customerId" column="custid"/>
		<result property="customerName" column="custname"/>
		<result property="partId" column="partid"/>
		<result property="partNo" column="partno"/>
		<result property="partName" column="partname"/>
		<result property="wipName" column="wip"/>
		<result property="wipOrder" column="wiporder"/>
		<result property="yearMonth1" column="mon1"/>
		<result property="yearMonth2" column="mon2"/>
		<result property="yearMonth3" column="mon3"/>
		<result property="yearMonth4" column="mon4"/>
		<result property="yearMonth5" column="mon5"/>
		<result property="yearMonth6" column="mon6"/>
		<result property="qty1" column="qty1"/>
		<result property="qty2" column="qty2"/>
		<result property="qty3" column="qty3"/>
		<result property="qty4" column="qty4"/>
		<result property="qty5" column="qty5"/>
		<result property="qty6" column="qty6"/>
		<result property="totalQty" column="qtyttl"/>
		<result property="yieldPercent" column="yieldpercent"/>
		<result property="custreqNoYield" column="custreqnoyield"/>
		<result property="custreqYield" column="custreqyield"/>
		<result property="commitNoYield" column="commitnoyield"/>
		<result property="commitYield" column="commityield"/>
		<result property="forecastNoYield" column="forecastnoyield"/>
		<result property="forecastYield" column="forecastyield"/>
		<result property="stock" column="stock"/>
		<result property="st" column="st"/>
		<result property="stTimeNoYield" column="sttimenoyield"/>
		<result property="stTimeYield" column="sttimeyield"/>
		<result property="machineName" column="mcname"/>
	</resultMap>
	
	<procedure id="selectMRDC_R20" resultMap="resultMRDC_R20" parameterClass="java.util.Map">
   		{ call SP_MRDC_CAPACITYCHECK( #month#,#customerid#,#partno#,#partname#,#wip#,#sorting# ) } 
	</procedure>
	
	<select id="queryFG" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.MPart">
		SELECT DISTINCT
 			 f.fgId AS partId
			,f.fgName AS partName
			,f.fgNo AS partNo
			,fc.customerId
			,CASE 
			 WHEN dd.fgid IS NULL THEN 'false'
			 ELSE 'true'
			 END AS isPlan
		FROM m_fg f 
		INNER JOIN m_fg_customer fc ON f.fgId = fc.fgid
		LEFT JOIN t_deliveryplan p ON p.customerid = fc.customerid 
				AND p.yearmonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
				AND p.revision = #revision#
		LEFT JOIN t_deliveryplan_date dd ON p.deliveryplanid = dd.deliveryplanid AND dd.fgid = f.fgid
		WHERE f.isenable = 1
		<isNotEmpty prepend="AND" property="customerId"> fc.customerId = #customerId# </isNotEmpty>
		
		Order by f.fgName,f.fgNo
	</select>
	
	<select id="queryWipInPart" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		SELECT pw.wip,w.wipName
		FROM v_cust_fg_part v INNER JOIN m_part_wip pw ON v.partid = pw.partid
		INNER JOIN m_wip w on pw.wip = w.wip
		<dynamic prepend="WHERE">
  			<isNotEmpty prepend="AND" property="customerId"> v.customerid = #customerId# </isNotEmpty>
  			<isNotEmpty prepend="AND" property="partId"> pw.partid = #partId# </isNotEmpty>
	  	</dynamic>
		ORDER BY pw.wiporder
	</select>
	
	<statement id="insertBalanceOrder" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlanDate" resultClass="integer">
		MERGE INTO t_deliveryplan_date_0 p
			USING ( 
				SELECT 
				<isNotEmpty property="deliveryPlanId">#deliveryPlanId#</isNotEmpty>
				<isEmpty property="deliveryPlanId">null</isEmpty> AS deliveryPlanId,
				<isNotEmpty property="fgId">#fgId#</isNotEmpty>
				<isEmpty property="fgId">null</isEmpty> AS fgId 
			) t
			ON (p.deliveryplanid = t.deliveryPlanId AND p.fgid = t.fgId)
			WHEN MATCHED THEN
				UPDATE SET
					 balanceorderqty = #balanceOrderQty#
				
			WHEN NOT MATCHED THEN
				INSERT (deliveryplanid, fgid, balanceorderqty)
				VALUES (#deliveryPlanId#, #fgId#, #balanceOrderQty#);
	</statement>
	<select id="selectFgByCustomerAndDate" parameterClass="th.co.nttdata.tki.bean.TDeliveryPlan" resultClass="th.co.nttdata.tki.bean.TDeliveryPlan">
		SELECT  pd.fgid,m.fgno,m.fgname
		      FROM   t_deliveryplan_date pd
		INNER JOIN t_deliveryplan p on pd.deliveryplanid = p.deliveryplanid
		INNER JOIN m_fg m on m.fgid = pd.fgid
		WHERE  p.customerid = #customerId#  and p.yearmonth = CAST(#year# AS VARCHAR(4)) + RIGHT('0'+ CAST(#month#+1 AS VARCHAR), 2)
		      GROUP BY pd.fgid,m.fgno,m.fgname
		ORDER BY pd.fgid,m.fgno,m.fgname

	</select>
</sqlMap>