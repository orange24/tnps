<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="t_fg_stock_adjust">
	
	<sql id="queryProperties">
		FROM t_fg_stock f 
		INNER JOIN m_fg fg ON f.fgid = fg.fgid
		INNER JOIN m_customer cust ON cust.customerid = f.customerid
		WHERE
			f.reportdate = #reportDate#
			<isNotEmpty prepend="AND" property="customerId"> cust.customerid = #customerId# </isNotEmpty>
			<isNotEmpty prepend="AND" property="fgName"> fg.fgname LIKE '%'+ #fgName# + '%' </isNotEmpty>
			<isNotEmpty prepend="AND" property="fgNo"> fg.fgno LIKE '%'+ #fgNo# + '%' </isNotEmpty>		
	</sql>
	
	<sql id="queryPropertiesHis">
		FROM t_fg_stock_adjust t 
		INNER JOIN m_fg fg ON t.fgid = fg.fgid
		INNER JOIN m_customer cust ON cust.customerid = t.customerid
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerId"> cust.customerid = #customerId# </isNotEmpty>
			<isNotEmpty prepend="AND" property="fgName"> fg.fgname LIKE '%'+ #fgName# + '%' </isNotEmpty>
			<isNotEmpty prepend="AND" property="fgNo"> fg.fgno LIKE '%'+ #fgNo# + '%' </isNotEmpty>
			<isNotEmpty prepend="AND" property="reportDateFrom"> CONVERT(DATE,t.reportdate,103) <![CDATA[ >= ]]> CONVERT(DATE,#reportDateFrom#,120) </isNotEmpty>
			<isNotEmpty prepend="AND" property="reportDateTo"> CONVERT(DATE,t.reportdate,103) <![CDATA[ <= ]]> CONVERT(DATE,#reportDateTo#,120) </isNotEmpty>
			<isNotEmpty prepend="AND" property="createDateFrom"> CONVERT(DATE,t.createDate,103) <![CDATA[ >= ]]> CONVERT(DATE,#createDateFrom#,120) </isNotEmpty>
			<isNotEmpty prepend="AND" property="createDateTo"> CONVERT(DATE,t.createDate,103) <![CDATA[ <= ]]> CONVERT(DATE,#createDateTo#,120) </isNotEmpty>
		</dynamic>
	</sql>
	
	<select id="queryFGAdjust" parameterClass="th.co.nttdata.tki.bean.TFGStock" resultClass="th.co.nttdata.tki.bean.TFGStock">
		SELECT 	fg.fgId,
				cust.customerId,
				cust.customerCode,
				fg.fgNo,
				fg.fgName,
				ISNULL(ISNULL(f.fgadjust,f.fgBalance),0) AS fgBalance,
				ISNULL(f.reportDate, #reportDate#) AS reportDate
		FROM t_fg_stock f 
		INNER JOIN m_fg fg ON f.fgid = fg.fgid
		INNER JOIN m_customer cust ON cust.customerid = f.customerid
		WHERE
			fg.isenable = 1 AND f.reportdate = #reportDate#
			<isNotEmpty prepend="AND" property="customerId"> cust.customerid = #customerId# </isNotEmpty>
			<isNotEmpty prepend="AND" property="fgName"> fg.fgname LIKE '%'+ #fgName# + '%' </isNotEmpty>
			<isNotEmpty prepend="AND" property="fgNo"> fg.fgno LIKE '%'+ #fgNo# + '%' </isNotEmpty>
		ORDER BY cust.customerCode, fg.fgNo
	</select>
	
	<select id="count"  parameterClass="th.co.nttdata.tki.bean.TFGStock" resultClass="int">
		SELECT COUNT(f.fgid)
		FROM t_fg_stock f 
		INNER JOIN m_fg fg ON f.fgid = fg.fgid
		INNER JOIN m_customer cust ON cust.customerid = f.customerid
		WHERE
			fg.isenable = 1 AND f.reportdate = #reportDate#
			<isNotEmpty prepend="AND" property="customerId"> cust.customerid = #customerId# </isNotEmpty>
			<isNotEmpty prepend="AND" property="fgName"> fg.fgname LIKE '%'+ #fgName# + '%' </isNotEmpty>
			<isNotEmpty prepend="AND" property="fgNo"> fg.fgno LIKE '%'+ #fgNo# + '%' </isNotEmpty>
	</select>
	
	<select id="queryFGAdjustHis" parameterClass="th.co.nttdata.tki.bean.TFGStock" resultClass="th.co.nttdata.tki.bean.TFGStock">
		SELECT 	t.fgId,
				cust.customerCode,
				fg.fgNo,
				fg.fgName,
				t.reportdate,
				t.fgcurrent_qty AS fgBalance,
				t.fgadjust_qty AS fgAdjust,
				t.fgadjust_reason AS adjustReason,
				t.createBy,
				t.createDate
		<include refid="queryPropertiesHis"/>
		ORDER BY t.createDate DESC, cust.customerCode,fg.fgNo
	</select>
	
	<select id="countHis" parameterClass="th.co.nttdata.tki.bean.TFGStock" resultClass="int">
		SELECT COUNT(t.fgid)
		<include refid="queryPropertiesHis"/>
	</select>
	
	<insert id="insertFGAdjust" parameterClass="th.co.nttdata.tki.bean.TFGStock">
		<iterate property="tfgStockList">
			<isNotEmpty property="tfgStockList[].fgAdjust">
				INSERT INTO t_fg_stock_adjust (reportdate,customerid,fgid,fgcurrent_qty,fgadjust_qty,fgadjust_reason,createby)
				VALUES(#reportDate#,#tfgStockList[].customerId#,#tfgStockList[].fgId#,#tfgStockList[].fgBalance#,#tfgStockList[].fgAdjust#,#tfgStockList[].adjustReason#,#tfgStockList[].createBy#)
			</isNotEmpty>
		</iterate>
	</insert>
	
	<update id="updateFGStock" parameterClass="th.co.nttdata.tki.bean.TFGStock">
		<iterate property="tfgStockList">
			<isNotEmpty property="tfgStockList[].fgAdjust">
				MERGE INTO t_fg_stock ws 
				USING (SELECT #reportDate# as reportdate,
					    #tfgStockList[].fgId# as fgid, #tfgStockList[].customerId# as customerid, #tfgStockList[].fgAdjust# as fgAdjust) st
				ON (ws.reportdate = st.reportdate and ws.fgid = st.fgid and ws.customerid = st.customerid)
				WHEN MATCHED THEN
					UPDATE SET fgadjust = st.fgAdjust
				WHEN NOT MATCHED THEN
					INSERT(reportdate,fgid,customerid,fgstock,fgin,fgout,fgbalance,fgadjust)
					VALUES(st.reportdate, st.fgid, st.customerid, 0, 0, 0, 0, st.fgAdjust);
			</isNotEmpty>
		</iterate>
	</update>
	
	<insert id="adjustFgStock" parameterClass="th.co.nttdata.tki.bean.TFGStock">
		<iterate property="tfgStockList">
			INSERT INTO t_fg_stock_adjust (reportdate,customerid,fgid,fgcurrent_qty,fgadjust_qty,fgadjust_reason,createby)
			VALUES(#tfgStockList[].reportDate#,#tfgStockList[].customerId#,#tfgStockList[].fgId#,#tfgStockList[].fgBalance#,
					#tfgStockList[].fgAdjust#,#tfgStockList[].adjustReason#,#tfgStockList[].createBy#)
		
			MERGE INTO t_fg_stock ws 
			USING (SELECT #tfgStockList[].reportDate# as reportdate,
				    #tfgStockList[].fgId# as fgid, #tfgStockList[].customerId# as customerid, #tfgStockList[].fgAdjust# as fgAdjust) st
			ON (ws.reportdate = st.reportdate and ws.fgid = st.fgid and ws.customerid = st.customerid)
			WHEN MATCHED THEN
				UPDATE SET fgadjust = st.fgAdjust
			WHEN NOT MATCHED THEN
				INSERT(reportdate,fgid,customerid,fgstock,fgin,fgout,fgbalance,fgadjust)
				VALUES(st.reportdate, st.fgid, st.customerid, 0, 0, 0, 0, st.fgAdjust);
		</iterate>
	</insert>
	
</sqlMap>