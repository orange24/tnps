<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="t_deadline_batch">

	<resultMap class="th.co.nttdata.tki.batch.bean.TWIPDeadline" id="partDlv" groupBy="partId">
		<result property="partId" column="partid"/>
		<result property="stock" column="fgStock"/>
		<result property="wipDeadlinedDateList" resultMap="t_deadline_batch.dlvDate"/>
	</resultMap>
	
	<resultMap class="th.co.nttdata.tki.batch.bean.TWIPDeadlinedDate" id="dlvDate">
		<result property="reportDate" column="deliveryDate"/>
		<result property="deadlineQty" column="productionQty"/>
	</resultMap>
	
	<select id="queryDeliveryPlan"   resultMap="partDlv">
		SELECT   mfg.partid, dp.deliverydate, dp.fgid, ISNULL(ISNULL(fs.fgadjust, fs.fgbalance), 0) AS fgStock , dp.productionQty
		FROM   
                (SELECT  dp1.deliveryplanid, dp1.yearmonth, dp1.customerid, dp1.revision, 
                  		 dp2.deliverydate, dp2.fgid, dp2.productionqty
                 FROM    t_deliveryplan dp1 INNER JOIN
                         t_deliveryplan_date dp2
                         ON dp1.deliveryplanid = dp2.deliveryplanid) AS dp 
                      	 INNER JOIN
                         m_fg_part AS mfg ON dp.fgid = mfg.fgid LEFT OUTER JOIN
                          	(SELECT  RANK() OVER (PARTITION BY fgId ORDER BY reportDate DESC) AS 'ranking', fgbalance, fgid, fgadjust
                          	 FROM    dbo.t_fg_stock) AS fs 
                         ON dp.fgid = fs.fgid AND fs.ranking =1
				 WHERE   (dp.productionQty IS NOT NULL AND dp.productionqty > 0) 
				 		 AND (dp.deliverydate BETWEEN GETDATE()
				 		 AND GETDATE() + 29)
				 		 AND dp.revision=(SELECT  MAX(d1.revision) AS revision
										  FROM    t_deliveryplan d1 INNER JOIN
         										  t_deliveryplan_date dd
        										  ON dd.deliveryplanid = d1.deliveryplanid       		 
										  WHERE yearmonth=(CAST(CAST(DATEPART(year, GETDATE()) AS varchar(50)) + 
												CAST(RIGHT('00' + LTRIM(STR(DATEPART(month,GETDATE()))), 2) AS varchar(50)) AS int))
										  and d1.customerid = dp.customerid )
		ORDER BY partid, deliverydate DESC
	</select>
	
	<select id="queryCapStockWIP" parameterClass="int" resultClass="th.co.nttdata.tki.batch.bean.TWIPDeadline">
		SELECT 
			ISNULL(
				CASE 
					WHEN stUseNo='1' THEN	
						ISNULL(CASE WHEN stresult1 = 0 THEN 0 ELSE 3600/stresult1  END,0)
					WHEN stUseNo='2' THEN	
						ISNULL(CASE WHEN stresult2 = 0 THEN 0 ELSE 3600/stresult2  END,0)
					WHEN stUseNo='3' THEN	
						ISNULL(CASE WHEN stresult3 = 0 THEN 0 ELSE 3600/stresult3  END,0)
					WHEN stUseNo='4' THEN	
						ISNULL(CASE WHEN stresult4 = 0 THEN 0 ELSE 3600/stresult4  END,0)
					WHEN stUseNo='5' THEN
						ISNULL(CASE WHEN stresult5 = 0 THEN 0 ELSE 3600/stresult5  END,0)
					ELSE 
						ISNULL(CASE WHEN stresult6 = 0 THEN 0 ELSE 3600/stresult6  END,0)
				END 
			,0)AS capacity,
			pw.wip, pw.wipOrder,pw.partId,
			ISNULL(ISNULL(ws.adjuststock,ws.currentStock),0) AS stock,
			1 AS isWIP
		FROM m_part_wip pw
			LEFT JOIN m_leadtime lt ON lt.partid = pw.partid and lt.wip = pw.wip
			LEFT JOIN (SELECT RANK() OVER (PARTITION BY partid,wip ORDER BY reportdate DESC)AS 'ranking',
			reportdate,adjuststock,currentStock ,wip,partid FROM t_wip_stock)ws
			ON pw.wip = ws.wip AND pw.partid = ws.partid AND ws.ranking =1
		WHERE pw.partid = #value#
		ORDER BY pw.wiporder
	</select>
	
	<insert id="insertWIPDeadline" parameterClass="th.co.nttdata.tki.batch.bean.TWIPDeadline">
		INSERT INTO t_wip_deadline (partid,wip,wiporder,iswip,capacity,stock)
		VALUES (#partId#,#wip#,#wipOrder#,#isWIP#,#capacity#,#stock#)
	</insert>
	
	<insert id="insertDeadlineDate" parameterClass="th.co.nttdata.tki.batch.bean.TWIPDeadlinedDate">
		INSERT INTO t_wip_deadline_date (reportdate,partid,wip,wiporder,deadlineqty,shiftid,colorid)
		VALUES (#reportDate#,#partId#,#wip#,#wipOrder#,#deadlineQty#,#shiftId#,#colorId#)
	</insert>
	
	<delete id="deleteDeadline">
		DELETE FROM t_wip_deadline_date;
		DELETE FROM t_wip_deadline;
	</delete>
	
	<delete id="deleteDeadlineDate" parameterClass="java.util.Map">
		DELETE FROM t_wip_deadline_date WHERE (reportdate <![CDATA[ < ]]> CONVERT(DATE,CAST(#executeDate# AS DATETIME)-10) OR reportdate <![CDATA[ >= ]]> CONVERT(DATE,#executeDate#));
	</delete>
	
	<insert id="insertDeadlineDateLast">
		INSERT INTO t_wip_deadline_date (reportdate,partid,wip,wiporder,deadlineqty,shiftid,colorid)
		SELECT reportdate,partid,wip,wiporder,deadlineqty,shiftid,colorid
		FROM   t_wip_deadline_tmp t
		WHERE exists (SELECT 1 FROM t_wip_deadline d WHERE d.partid = t.partid AND d.wip = t.wip AND d.wiporder = t.wiporder)
	</insert>
	
	<delete id="deleteDeadlineTmp">
		DELETE FROM t_wip_deadline_header_tmp;
		DELETE FROM t_wip_deadline_tmp;
	</delete>
	
	<insert id="copyDeadlineDate">
		INSERT INTO t_wip_deadline_tmp (reportdate,partid,wip,wiporder,deadlineqty,shiftid,colorid)
		SELECT reportdate,partid,wip,wiporder,deadlineqty,shiftid,colorid
		FROM t_wip_deadline_date
	</insert>
	
	<insert id="copyDeadlineHeader">
		INSERT INTO t_wip_deadline_header_tmp (partid,wip,wiporder,iswip,capacity,stock)
		SELECT partid,wip,wiporder,iswip,capacity,stock
		FROM t_wip_deadline
	</insert>
	
	<insert id="mergeInsertdaedline">
		MERGE INTO t_wip_deadline dl 
		USING ( 
			SELECT partid,wip,wiporder,iswip,capacity,stock
			FROM t_wip_deadline_header_tmp
		)tmp
		ON (dl.partid = tmp.partid AND dl.wip = tmp.wip AND dl.wiporder = tmp.wiporder ) 
		WHEN NOT MATCHED THEN
			INSERT(partid,wip,wiporder,iswip,capacity,stock)
			VALUES(tmp.partid,tmp.wip,tmp.wiporder,tmp.iswip,tmp.capacity,tmp.stock);	
	</insert>
	
</sqlMap>